# .github/workflows/build.yml 파일 생성
# 이 파일이 자동 빌드의 설명서입니다

name: Build and Push Docker Image  # Actions 탭에 표시될 이름

# 트리거 조건 (언제 실행할지)
# 왜 main 브랜치만? 개발 중인 브랜치는 빌드하지 않기 위해
on:
  push:
    branches: [ main ]  # main에 푸시 또는 PR 머지 시 실행

# 환경변수 정의
# 왜 환경변수로? 여러 곳에서 재사용하기 위해
env:
  REGISTRY: docker.io  # Docker Hub 주소
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/simple-gitops

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub이 제공하는 Ubuntu 서버에서 실행
    # 왜 Ubuntu? 안정적이고 Docker 지원 우수
    
    steps:
    # Step 1: 코드 체크아웃
    # 왜 필요? GitHub Actions 서버는 빈 서버이므로 코드를 가져와야 함
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Step 2: 자동 버전 생성
    # 왜 날짜-시간-해시 형식?
    # - 날짜시간: 언제 빌드됐는지 바로 알 수 있음
    # - 커밋해시: 어떤 코드인지 정확히 추적 가능
    # - 조합하면 절대 중복되지 않는 고유한 태그 생성
    - name: Generate version
      id: version
      run: |
        # 태그 생성 (예: 20241205-143022-abc1234)
        TAG=$(date +%Y%m%d-%H%M%S)-$(git rev-parse --short HEAD)
        
        # GitHub Actions 변수로 저장
        echo "tag=${TAG}" >> $GITHUB_OUTPUT
        
        echo "📦 생성된 버전: ${TAG}"
    
    # Step 3: Docker Hub 로그인
    # 왜 필요? 이미지를 푸시하려면 인증 필요
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        # secrets는 GitHub에 안전하게 저장된 비밀값
        # 왜 secrets 사용? 비밀번호를 코드에 직접 쓰면 위험
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # Step 4: Docker 이미지 빌드 및 푸시
    - name: Build and push
      run: |
        # 이미지 이름 구성
        IMAGE="${{ secrets.DOCKER_USERNAME }}/simple-gitops"
        
        # 빌드 (두 개의 태그 생성)
        # 왜 두 개? 
        # - 특정 버전 태그: 정확한 버전 추적용
        # - latest 태그: 최신 버전 참조용
        docker build \
          --build-arg APP_VERSION=${{ steps.version.outputs.tag }} \
          -t ${IMAGE}:${{ steps.version.outputs.tag }} \
          -t ${IMAGE}:latest \
          .
        
        # Docker Hub에 푸시
        docker push ${IMAGE}:${{ steps.version.outputs.tag }}
        docker push ${IMAGE}:latest
        
        echo "✅ 빌드 완료!"
        echo "🔗 https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/simple-gitops"